{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/app.component.css","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/shared/dataService.ts","webpack:///./app/shared/order.ts","webpack:///./app/shop/cart.component.css","webpack:///./app/shop/cart.component.html","webpack:///./app/shop/cart.component.ts","webpack:///./app/shop/productList.component.css","webpack:///./app/shop/productList.component.html","webpack:///./app/shop/productList.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-9\\\">\\r\\n    <h3>{{ title }}</h3>\\r\\n    <product-list></product-list>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <div class=\\\"card bg-light p-2\\\">\\r\\n      <the-cart></the-cart>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Dutch Treat';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProductList } from './shop/productList.component';\r\nimport { DataService } from './shared/dataService';\r\nimport { Cart } from './shop/cart.component';\r\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductList,\n    Cart\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from './product';\r\nimport { Order, OrderItem } from './order';\r\n//import * as OrderNS from './order';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public order: Order = new Order();\r\n\r\n  public products: Product[] = [];\r\n    //{ title: \"First Product\", price: 19.99 },\r\n    //{ title: \"Second Product\", price: 9.99 },\r\n    //{ title: \"Third Product\", price: 14.99 }\r\n\r\n  loadProducts(): Observable<boolean> {\r\n    return this.http.get(\"/api/products\")\r\n      .pipe(map((data: any[]) => {\r\n        this.products = data;\r\n        return true;\r\n      }));\r\n  }\r\n\r\n  public addToOrder(product: Product) {\r\n\r\n    //if (this.order) { this.order = new Order;  }\r\n\r\n    let item: OrderItem = this.order.items.find(i => i.productId == product.id);\r\n\r\n    if (item) {\r\n    item.quantity++\r\n\r\n    } else {\r\n\r\n      item = new OrderItem();\r\n      item.productId = product.id;\r\n      item.productArtist = product.artist;\r\n      item.productArtId = product.artId;\r\n      item.productCategory = product.category;\r\n      item.productSize = product.size;\r\n      item.productTitle = product.title;\r\n      item.unitPrice = product.price;\r\n      item.quantity = 1;\r\n\r\n      this.order.items.push(item);\r\n    }\r\n  }\r\n  \r\n}","﻿import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n  orderId: number;\r\n  orderDate: Date = new Date();\r\n  orderNumber: string;\r\n  items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n  get subtotal(): number {\r\n    return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n  };\r\n\r\n}\r\n\r\nexport class OrderItem {\r\n  id: number;\r\n  quantity: number;\r\n  unitPrice: number;\r\n  productId: number;\r\n  productCategory: string;\r\n  productSize: string;\r\n  productTitle: string;\r\n  productArtist: string;\r\n  productArtId: string;\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL3Nob3AvY2FydC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h3>Shopping Cart</h3>\\r\\n<div>#/Items: {{ data.order.items.length }}</div>\\r\\n<div>SubTotal: {{ data.order.subtotal | currency }}</div>\\r\\n<table class=\\\"table table-condensed table-hover\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <td>Product</td>\\r\\n      <td>#</td>\\r\\n      <td>$</td>\\r\\n      <td>Total</td>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let o of data.order.items\\\" >\\r\\n      <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\\r\\n      <td>{{ o.quantity }}</td>\\r\\n      <td>{{ o.unitPrice | currency }}</td>\\r\\n      <td>{{ (o.unitPrice * o.quantity) | currency }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n\\r\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../shared/dataService';\r\n\n@Component({\n  selector: 'the-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class Cart implements OnInit {\n\n  constructor(private data: DataService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".product-info img {\\r\\n  max-width: 100px;\\r\\n  float: left;\\r\\n  margin: 0 2px;\\r\\n  border: solid 1px black;\\r\\n}\\r\\n\\r\\n.product-info .product-name {\\r\\n  font-size: large;\\r\\n  font-weight: bold; \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudEFwcC9hcHAvc2hvcC9wcm9kdWN0TGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixjQUFjO0VBQ2Qsd0JBQXdCO0NBQ3pCOztBQUVEO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtDQUNuQiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL3Nob3AvcHJvZHVjdExpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9kdWN0LWluZm8gaW1nIHtcclxuICBtYXgtd2lkdGg6IDEwMHB4O1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIG1hcmdpbjogMCAycHg7XHJcbiAgYm9yZGVyOiBzb2xpZCAxcHggYmxhY2s7XHJcbn1cclxuXHJcbi5wcm9kdWN0LWluZm8gLnByb2R1Y3QtbmFtZSB7XHJcbiAgZm9udC1zaXplOiBsYXJnZTtcclxuICBmb250LXdlaWdodDogYm9sZDsgXHJcbn0iXX0= */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"product-info col-md-4\\\" *ngFor=\\\"let p of products\\\">\\r\\n    <div class=\\\"card bg-light p-1 m-1\\\">\\r\\n      <img src=\\\"/img/{{ p.artId }}.jpg\\\" class=\\\"img-fluid\\\" [alt]=\\\"p.title\\\" />\\r\\n      <div class=\\\"product-name\\\">{{ p.category }} - {{ p.size }}</div>\\r\\n      <div><strong>Price</strong>: {{ p.price | currency}}</div>\\r\\n      <div><strong>Artist</strong>: {{ p.artist }}</div>\\r\\n      <div><strong>Title</strong>: {{ p.title }}</div>\\r\\n      <div><strong>Description</strong>: {{ p.artDescription }}</div>\\r\\n      <button id=\\\"buyButton\\\" class=\\\"btn btn-success btn-sm pull-right\\\" (click)=\\\"addProduct(p)\\\">\\r\\n        Buy\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!--<ul>\\r\\n  <li *ngFor=\\\"let p of products\\\">{{ p.title }}: {{ p.price | currency }}</li>\\r\\n</ul>-->\\r\\n\"","﻿import { Component, OnInit } from \"@angular/core\"\r\nimport { DataService } from \"../shared/dataService\";\r\nimport { Product } from \"../shared/product\"\r\n\r\n@Component({\r\n  selector: \"product-list\",\r\n  templateUrl: \"productList.component.html\",\r\n  styleUrls: [\"productList.component.css\"]\r\n\r\n})\r\nexport class ProductList implements OnInit {\r\n\r\n  constructor(private data: DataService) {\r\n    //this.products = data.products;\r\n  }\r\n\r\n  public products: Product[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.data.loadProducts()\r\n      .subscribe(success => {\r\n        if (success) { this.products = this.data.products; }\r\n      });\r\n  }\r\n\r\n  addProduct(product: Product) {\r\n    this.data.addToOrder(product);\r\n  }\r\n\r\n}\r\n\r\n//  public products = [\r\n//  { title: \"First Product\", price: 19.99 },\r\n//  { title: \"Second Product\", price: 9.99 },\r\n//  { title: \"Third Product\", price: 14.99 }\r\n//];","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}